apply plugin: 'com.android.application'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "skv.org.simpleaccountant"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    def versionPropsFile = file('version.properties')
    def package_name = ""
    def app_name = ""
    def ver = ""
    def app_name_with_version = ""

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        def versionMajor = versionProps['VERSION_MAJOR'].toInteger()
        def versionMinor = versionProps['VERSION_MINOR'].toInteger()
        def versionBuild = versionProps['VERSION_BUILD'].toInteger()
        package_name = versionProps['PACKAGE_NAME'].toString()
        app_name = versionProps['APP_NAME'].toString()
        ver = "${versionMajor}.${versionMinor}.${versionBuild}"
        app_name_with_version = app_name + "_" + ver

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            jackOptions {
                enabled false
            }
            renderscriptTargetApi 15
            renderscriptSupportModeEnabled true
            applicationId = package_name
            versionCode versionProps['VERSION_CODE'].toInteger()
            versionName ver
            minSdkVersion 15
            targetSdkVersion 25
            multiDexEnabled true
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        dexInProcess = true
        javaMaxHeapSize "4g"
    }

    dataBinding {
        enabled = true
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace("app", app_name_with_version))
        }
    }

//    buildTypes {
//        release {
//            resValue "string", "app_name", app_name
//            shrinkResources true
//            debuggable false
//            signingConfig signingConfigs.release
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//
//        debug {
//            resValue "string", "app_name", app_name
//            shrinkResources false //do not enable in debug - not supported in dex.
//            debuggable true
//            signingConfig signingConfigs.debug
//            minifyEnabled false
//            versionNameSuffix " dev"
//        }
//    }

    compileOptions {
        targetCompatibility 1.7
        sourceCompatibility 1.7
    }
}

allprojects {
    afterEvaluate { project ->
        def propsFile = rootProject.file('keystore.properties')
        def configName = 'release'

        if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            android.signingConfigs[configName].storeFile = file(props['storeFile'])
            android.signingConfigs[configName].storePassword = props['storePassword']
            android.signingConfigs[configName].keyAlias = props['keyAlias']
            android.signingConfigs[configName].keyPassword = props['keyPassword']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.5.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    compile 'com.android.support:cardview-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}
